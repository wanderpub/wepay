protected function send4Ios($params, $isAll = false)
{
    $result = new Result();
    try {
        $api = new App(ClientTypeCode::IOS, 'sellerapp');
        if ($isAll) {
            $api = $api->setAudienceType(App::AUDIENCE_ALL);
        } else {
            if (!empty($params['alias'])) {
                $api = $api->setAudienceType(App::AUDIENCE_ACCOUNT_LIST);
                $api = $api->setAccountList($params['alias']);
            } elseif (!empty($params['raw_tag'])) {
                $api = $api->setAudienceType(App::AUDIENCE_TAG);
                $api = $api->setTagRules($params['raw_tag']);
            }
        }
        $title = $content = '';
        if (is_string($params['alert'])) {
            $title = '你有一条新消息';
            $content = $params['alert'];
        } elseif (is_array($params['alert'])) {
            $title = $params['alert']['title'];
            $content = $params['alert']['body'];
        }
        $toExtras = [];
        if (!empty($params['notification'])) {
            if (!empty($params['notification']['title'])) {
                $title = $params['notification']['title'];
            }
            if (isset($params['notification']['extras'])) {
                $toExtras = $params['notification']['extras'];
            }
        }
        // ios使用
        if ((isset($params['apns_production']) && $params['apns_production'] == true) ||
            !Registry::get("config")->get('debug')) {
            $api = $api->setEnvironment('product');
        } else {
            $api = $api->setEnvironment('dev');
        }

        //$api = $api->setTokenList(App::AUDIENCE_ALL); // [“token1”]
        $api = $api->setMessageType(App::MESSAGE_TYPE_NOTIFY);
        // 推送 tag1 和 tag2 的设备{"tags":["tag1","tag2"],"op":"AND"}
        // 推送 tag1 或 tag 的设备{"tags":["tag1","tag2"],"op":"OR"}
        //$api = $api->setTagList(App::MESSAGE_TYPE_NOTIFY);
        $notify = new IosNotify();
        $notify->setTitle($title);
        $notify->setContent($content);
        $notify->setThreadId('sldl_xg_push');
        $notify->setXgMediaResource('');
        if (isset($params['time_to_live']) && is_numeric($params['time_to_live'])) {
            $notify->setExpireTime($params['time_to_live']);
        }

        $notifyBodyApsAlert = new IosNotifyBodyApsAlert();
        $notifyBodyApsAlert->setTitle($title);
        $notifyBodyApsAlert->setContent($content);
        $notifyBodyAps = new IosNotifyBodyAps();
        $notifyBodyAps->setAlert($notifyBodyApsAlert->toArray());
        $notifyBodyAps->setBadgeType(-2);
        $notifyBodyAps->setCategory('sldl_xg_push');
        $notifyBodyAps->setSound('default');
        //$notifyBodyAps->setMutableContent(1);
        $notifyBody = new IosNotifyBody();
        $notifyBody->setAps($notifyBodyAps->toArray());
        $notifyBody->setCustomContent(json_encode($toExtras));

        $notify->setIos($notifyBody->toArray());

        $api = $api->setMessage($notify->toArray());
        $response = $api->getParams()->sendRequest()->getResult();
        if ($response->getErrorCode()) {
            throw new ServiceException($response->getErrorInfo(), $response->getErrorCode());
        }
        $result->success = true;
        $result->data = [
            'result' => $response->getResultStr(),
            'seq' => $response->getSeq(),
            'env' => $response->getEnvironment(),
            'push_id' => $response->getPushId(),
        ];
        $result->code = $response->getErrorCode();
        $result->message = $response->getErrorInfo();
    } catch (ServiceException $e) {
        $result->success = false;
        $result->message = $e->getMessage();
        $result->code = $e->getCode();
    }
    self::writePushLog($result);
    return $result;
}